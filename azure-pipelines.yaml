name: Azure Pipelines

trigger:
  - main

pool: mypool

variables:
  python.version: "3.7.6"
  azureServiceConnectionId: azure-udacity
  projectRoot: $(System.DefaultWorkingDirectory)
  environmentName: "test-env"

stages:
  #--------------------------------------------#
  # BUILD STAGE
  #--------------------------------------------#
  - stage: Build
    jobs:
      - job: BuildInfrastructure
        steps:
          # - task: TerraformInstaller@0
          #   displayName: "Terrafom installation"
          #   inputs:
          #     terraformVersion: "1.2.9"

          # - task: TerraformCLI@0
          #   displayName: "Terrafom init"
          #   inputs:
          #     provider: "azurerm"
          #     command: "init"
          #     workingDirectory: "$(System.DefaultWorkingDirectory)/terraform/environments/test"
          #     backendServiceArm: "$(azureServiceConnectionId)"
          #     backendAzureRmResourceGroupName: "Azuredevops"
          #     backendAzureRmStorageAccountName: "tfstate731116321"
          #     backendAzureRmContainerName: "tfstate"
          #     backendAzureRmKey: "test.terraform.tfstate"

          # - task: TerraformCLI@0
          #   displayName: Terraform validate
          #   inputs:
          #     provider: "azurerm"
          #     command: "validate"

          # - task: TerraformCLI@0
          #   displayName: Terraform apply
          #   inputs:
          #     provider: "azurerm"
          #     command: "apply"
          #     workingDirectory: "$(System.DefaultWorkingDirectory)/terraform/environments/test"
          #     environmentServiceNameAzureRM: "$(azureServiceConnectionId)"

          # - task: CmdLine@2
          #   displayName: Install Newman
          #   inputs:
          #     script: |
          #       sudo npm install -g newman
          #     workingDirectory: $(System.DefaultWorkingDirectory)

          - task: CmdLine@2
            displayName: Run Data Validation Tests
            continueOnError: true
            inputs:
              script: |
                newman run data_validation_collection.json  --reporters cli,junit --reporter-junit-export results/report1.xml
              workingDirectory: "$(System.DefaultWorkingDirectory)/automatedtesting/postman"

          - task: CmdLine@2
            displayName: Run Regression Tests
            continueOnError: true
            inputs:
              script: |
                newman run regression_collection.json --reporters cli,junit --reporter-junit-export results/report2.xml
              workingDirectory: "$(System.DefaultWorkingDirectory)/automatedtesting/postman"

          - task: PublishTestResults@2
            inputs:
              testResultsFormat: JUnit
              testResultsFiles: "*.xml"
              searchFolder: "$(System.DefaultWorkingDirectory)/automatedtesting/postman/results"
              mergeTestResults: true
              testRunTitle: DataValidationAndRegression

          - task: ArchiveFiles@2
            displayName: "Archive UI Tests"
            inputs:
              rootFolderOrFile: "$(System.DefaultWorkingDirectory)/automatedtesting/selenium"
              includeRootFolder: false
              archiveType: "zip"
              archiveFile: "$(Build.ArtifactStagingDirectory)/uitests.zip"

          - publish: $(Build.ArtifactStagingDirectory)/uitests.zip
            displayName: Publish Selenium Archive
            artifact: uitests

          - task: ArchiveFiles@2
            displayName: "Archive FakeRestAPI"
            inputs:
              rootFolderOrFile: "$(System.DefaultWorkingDirectory)/automatedtesting/jmeter/fakerestapi"
              includeRootFolder: false
              archiveType: zip
              archiveFile: "$(Build.ArtifactStagingDirectory)/fakerestapi.zip"

          - publish: "$(Build.ArtifactStagingDirectory)/fakerestapi.zip"
            displayName: Publish FakeRestAPI Archive
            artifact: fakerestapi

          - task: ArchiveFiles@2
            displayName: "Archive PerformanceTestSuite"
            inputs:
              rootFolderOrFile: "$(System.DefaultWorkingDirectory)/automatedtesting/jmeter/Starter.jmx"
              includeRootFolder: false
              archiveType: zip
              archiveFile: "$(Build.ArtifactStagingDirectory)/jmeter.zip"

          - publish: "$(Build.ArtifactStagingDirectory)/jmeter.zip"
            displayName: Publish PerformanceTestSuite Archive
            artifact: jmeter

  #--------------------------------------------#
  # DEPLOYMENT STAGE
  #--------------------------------------------#
  - stage: Deploy
    jobs:
      - deployment: FakeRestAPI
        pool:
          vmImage: "Ubuntu-18.04"
        environment: $(environmentName)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureWebApp@1
                  displayName: "Deploy Azure Web App"
                  inputs:
                    azureSubscription: $(azureServiceConnectionId)
                    appName: myApplication-AppService
                    appType: webApp
                    package: $(Pipeline.Workspace)/fakerestapi/fakerestapi.zip
